The DutchmenServe project has two parts: the App and the Server (see on Bitbucket).
This is about THE SERVER!

STRUCTURE: follows Django's autogenerated project structure
- db.sqlite3 is your database, have to run server and use admin view to see 
- manage.py is autogenerated, used to run server

--- appserver: 
- in settings.py: update ALLOWED_HOSTS ip before running server
can add databases, edit rest framework, packages used
- in urls.py: add auth url

--- dutchmenserve: spend most of your time editing views, urls, models
- admin: registers your models; if you add a new one, have to register here first
- connection: makes connection with remote server
- models: defines the same models as on the App, as well as for Many to Many relationships
- serializers: helps making json for responses in views, one for each model
- tests: not used yet
- urls: all your endpoints
- views: define what server does at each endpoint

To run the server: on whatever port you want, here it's arbitrarily 5455
# cd appserver
# python manage.py runserver 5455  #localhost or emulator
# python manage.py runserver 10.2.196.121:5455  #computer, update with ip
# Also make sure to update ALLOWED_HOSTS in settings.py with it aswell

If you change the models, you have to migrate changes (google for more info)
# python manage.py migrate
# python manage.py makemigrations dutchmenserve  -- tell Django you made changes to models
# python manage.py sqlmigrate dutchmenserve #### -- prints to screen, check what Django will do
# python manage.py migrate -- rerun migrate to create tables/apply changes

If you delete the db.sqlite3 file and restart your sqlite database, have to create a new user 
# python manage.py createsuperuser -- create admin
# Username: admin
# Email address: admin@lvc.edu
# Password: dutchmenserve



TO DO: 
user authentication: jwt token generation, login view, LDAP connection
make https
switch from sqlite database
connect to lvc service database?